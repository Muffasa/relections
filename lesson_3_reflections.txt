When would you want to use a remote repository rather than keeping all your work local?

In many cases, the 2 major ones for me are:
- If there are many developers on separated locations that want to work on the same project.
- Even you want to develop something yourself, it worth to upload it to git so other people might view and suggest new ways to accomplish some goals or even bug fixing.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-data with your remote repository?

First of all you must have full controll over your commits, the commits on the local machine and the once on git dosent have to be identical, the oposite! i think they should be diffrent in most cases,for example: I dont need anyone wasting time on my experiments, tring to understand them or what ever, Git and GitHub wworks on the same engine but surve diffrent goals, one is for version control and the other is for Open source, sharing code, and bring mindes together,  

Describe the differences between forks, clones, and branches. When would you use one instead of another?

forks and clones are the same, it just forks are on GitHub. branches have nothing to do with the others, forks and clones connected to repositories and branch is a commit, its the brik that builds any reposetory related consepts.

What is the benefit of having a copy of the last known state of the remote stored locally?

You can keep track of the changes that have been made if you were offline or off work for some reason. ferther more, you can allway be sure you can pull that way.

How would you collaborate without using Git or GitHub? What would be easier, anf hat eould be harder?

I guess the old way, zip the solution and send it back and forth, sounds so wierd now after this course=\.

When would you want to make changer in a separate branch rather than directly in master? What benefits dose each approach have?

 
the changes on the master branch must be controlled by 1 or maybe small group ofpeople, every contributer to the project must develop his code on diffrent branch then the master for many reasones. another reason for me wanting to make changes on a branch diffrent then the master is that by multiple branches the project can grow in many directions, even if it alltle more complicated then just work directly on master, the value it brings to any project is unmeasurable.

